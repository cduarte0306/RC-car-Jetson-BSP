DESCRIPTION = "RC Car custom image"
LICENSE = "MIT"

inherit core-image

IMAGE_INSTALL += " \
    packagegroup-core-boot \
    bash \
    openssh \
    nano \
    hostapd \
    dnsmasq \
    net-tools \
    procps \
    systemd \
    opencv \
    opencv-samples \
    rc-car-eth-setup \
    gstreamer1.0 \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-plugins-tegra \
    gstreamer1.0-plugins-tegra-binaryonly \
    gdbserver \
    boost \
    dtc \
    spidev-test \
"

TOOLCHAIN_TARGET_TASK:append = " boost"

IMAGE_CLASSES += "image_types_tegra"
IMAGE_FSTYPES = "tegraflash"
LICENSE_FLAGS_ACCEPTED += "commercial"

KERNEL_MODULE_AUTOLOAD:append = " spidev"

IMAGE_BOOT_FILES += " \
    Image;Image \
    tegra210-p3448-0000-p3449-0000-a02.dtb \
"

python do_create_extlinux_conf() {
    import os

    content = """
# Generic Distro Configuration file generated by OpenEmbedded
LABEL Poky (Yocto Project Reference Distro)
    KERNEL ../Image
    INITRD ../initrd
    APPEND ${cbootargs} root=/dev/mmcblk0p${distro_bootpart} rw rootwait ${bootargs}
    FDTOVERLAYS /boot/overlays/rc-car-spi-overlay.dtbo
""".strip() + "\n"

    # Write to rootfs
    rootfs_path = os.path.join(d.getVar('IMAGE_ROOTFS'), 'boot', 'extlinux')
    bb.utils.mkdirhier(rootfs_path)
    with open(os.path.join(rootfs_path, 'extlinux.conf'), 'w') as f:
        f.write(content)

    # Write to WORKDIR for deployment
    workdir_path = os.path.join(d.getVar('WORKDIR'), 'extlinux.conf')
    with open(workdir_path, 'w') as f:
        f.write(content)
}

ROOTFS_POSTPROCESS_COMMAND += "do_create_extlinux_conf;"

do_deploy[dirs] += "${DEPLOYDIR}"
do_deploy:append() {
    install -Dm 0644 ${WORKDIR}/extlinux.conf ${DEPLOYDIR}/extlinux.conf
}
